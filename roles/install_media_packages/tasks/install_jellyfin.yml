---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if networks exist
  command: docker network inspect {{ item }}
  register: network_check
  failed_when: network_check.rc != 0
  changed_when: false
  loop: 
    - traefik_proxy
    - pangolin_network

- name: Create directories for Jellyfin
  file:
    path: "{{ item }}"
    state: directory
    owner: "nobody"
    group: "nogroup"
    mode: "0755"
  loop:
    - "{{ jellyfin_config }}"
    - "{{ jellyfin_logs }}"
    - "{{ jellyfin_metadata }}"
    - "{{ jellyfin_cache }}"
    - "{{ media_data_path }}"
    - "{{ media_data_path }}/movies"
    - "{{ media_data_path }}/series"
    - "{{ media_data_path }}/others"

- name: Deploy Jellyfin using Docker Compose
  docker_container:
    name: jellyfin
    image: jellyfin/jellyfin:latest
    hostname: jellyfin
    user: "nobody:nogroup"
    env:
      JELLYFIN_PublishedServerUrl: "https://{{ jellyfin_domain }}"
    volumes:
      - "{{ jellyfin_logs }}:/config/log"
      - "{{ jellyfin_metadata }}:/config/metadata"
      - "{{ jellyfin_cache }}:/cache"
      - "{{ jellyfin_config }}:/config"
      - "{{ media_data_path }}:/data"
    # ports:
    #   - "8920:8920" #optional
    #   - "7359:7359/udp" #optional
    #   - "1900:1900/udp" #optional
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "jellyfin"
      traefik.enable: "true"
      traefik.http.routers.jellyfin-secure.entrypoints: "https"
      traefik.http.routers.jellyfin-secure.rule: "Host(`{{ jellyfin_domain }}`)"
      traefik.http.routers.jellyfin-secure.tls: "true"
      traefik.http.routers.jellyfin.service: "jellyfin"
      traefik.http.services.jellyfin.loadbalancer.server.port: "8096"
      traefik.docker.network: "traefik_proxy"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "jellyfin"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "8096"
    networks:
      - name: traefik_proxy
      - name: pangolin_network
    restart_policy: unless-stopped
    state: started

- name: Fix folder ownership
  shell: "sudo docker exec -it jellyfin chown nobody:nogroup {{ item }}"
  loop:
    - "/data"
    - "/data/movies"
    - "/data/series"
    - "/data/others"

- name: Jellyfin deployed
  debug:
    msg: "Jellyfin is running successfully"
