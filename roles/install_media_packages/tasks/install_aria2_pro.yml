---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if networks exist
  command: docker network inspect {{ item }}
  register: network_check
  failed_when: network_check.rc != 0
  changed_when: false
  loop: 
    - traefik_proxy
    - pangolin_network

- name: Ensure required directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ aria_config }}"
    - "{{ media_data_path }}/downloads/aria"

- name: Deploy Aria2-AriaNG container
  docker_container:
    name: aria2ariang
    image: hurlenko/aria2-ariang
    env:
      PUID: "1000"
      PGID: "1000"
      RPC_SECRET: "{{ aria2_password }}"
      ARIA2RPCPORT: "443"
      BASIC_AUTH_USERNAME: "{{ aria2_username }}"
      BASIC_AUTH_PASSWORD: "{{ aria2_password }}"
    volumes:
      - "{{ aria_config }}:/aria2/conf"
      - "{{ media_data_path }}/downloads/aria:/aria2/data"
    # ports:
    #  - 443:8080
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "aria2ariang"
      traefik.enable: "true"
      traefik.http.routers.aria2pro-secure.entrypoints: "https"
      traefik.http.routers.aria2pro-secure.rule: "Host(`{{ aria2ariang_domain }}`)"
      traefik.http.routers.aria2pro-secure.tls: "true"
      traefik.http.routers.aria2pro.service: "aria2ariang"
      traefik.http.services.aria2pro.loadbalancer.server.port: "8080"
      traefik.docker.network: "traefik_proxy"
    networks:
      - name: traefik_proxy
      - name: pangolin_network
    restart_policy: unless-stopped
    state: started

- name: Aria2-pro deployed
  debug:
    msg: "Aria2-pro is running successfully"

