---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if networks exist
  command: docker network inspect {{ item }}
  register: network_check
  failed_when: network_check.rc != 0
  changed_when: false
  loop: 
    - traefik_proxy
    - pangolin_network

- name: Ensure required directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ aria_config }}"
    - "{{ media_data_path }}/downloads/aria"

- name: Deploy Aria2-pro container
  docker_container:
    name: aria2pro
    image: p3terx/aria2-pro:latest
    env:
      PUID: "1000"
      PGID: "1000"
      UMASK_SET: "022"
      RPC_SECRET: "P3TERX"
      RPC_PORT: "6800"
      LISTEN_PORT: "6888"
      DISK_CACHE: "64M"
      IPV6_MODE: "false"
      UPDATE_TRACKERS: "true"
      CUSTOM_TRACKER_URL: ""
      TZ: "GB"
    volumes:
      - "{{ aria_config }}:/config"
      - "{{ media_data_path }}/downloads/aria:/downloads"
    ports:
    #  - 6800:6800
     - 6888:6888
     - 6888:6888/udp
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "aria2pro"
      traefik.enable: "true"
      traefik.http.routers.aria2pro-secure.entrypoints: "https"
      traefik.http.routers.aria2pro-secure.rule: "Host(`{{ aria2pro_domain }}`)"
      traefik.http.routers.aria2pro-secure.tls: "true"
      traefik.http.routers.aria2pro.service: "aria2pro"
      traefik.http.services.aria2pro.loadbalancer.server.port: "6800"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "aria2pro"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "6800"
    networks:
      # - name: media_network
      - name: traefik_proxy
    log_driver: "json-file"
    log_options:
      max-size: "1m"
    restart_policy: unless-stopped
    state: started

- name: Deploy AriaNG container
  docker_container:
    name: ariang
    image: p3terx/ariang:latest
    command: --port 6880 --ipv6
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "ariang"
      traefik.enable: "true"
      traefik.http.routers.ariang-secure.entrypoints: "https"
      traefik.http.routers.ariang-secure.rule: "Host(`{{ ariang_domain }}`)"
      traefik.http.routers.ariang-secure.tls: "true"
      traefik.http.routers.ariang.service: "ariang"
      traefik.http.services.ariang.loadbalancer.server.port: "6880"
      traefik.docker.network: "traefik_proxy"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "ariang"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "6880"
    networks:
      - name: traefik_proxy
      - name: pangolin_network
    log_driver: "json-file"
    log_options:
      max-size: "1m"
    restart_policy: always
    state: started

- name: Fix folder ownership
  shell: "sudo docker exec -it aria2pro chown p3terx:p3terx {{ item }}"
  loop:
    - "/downloads"

- name: Aria2-pro deployed
  debug:
    msg: "Aria2-pro is running successfully"

