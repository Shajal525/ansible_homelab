---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if traefik_proxy network exists
  command: docker network inspect traefik_proxy
  register: network_check
  failed_when: network_check.rc != 0

- name: Create directories for Sonarr
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ sonarr_config }}"
    - "{{ media_data_path }}"

- name: Deploy Sonarr container
  docker_container:
    name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "GB"
    volumes:
      - "{{ sonarr_config }}:/config"
      - "{{ media_data_path }}:/data"
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "sonarr"
      traefik.enable: "true"
      traefik.http.routers.sonarr-secure.entrypoints: "https"
      traefik.http.routers.sonarr-secure.rule: "Host(`{{ sonarr_domain }}`)"
      traefik.http.routers.sonarr-secure.tls: "true"
      traefik.http.routers.sonarr.service: "sonarr"
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "sonarr"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "8989"
    networks:
      # - name: media_network
      - name: traefik_proxy
    restart_policy: unless-stopped
    state: started

- name: Fix data folder ownership
  shell: "sudo docker exec -it sonarr chown abc:users /data"

- name: Sonarr deployed
  debug:
    msg: "Sonarr is running successfully"
