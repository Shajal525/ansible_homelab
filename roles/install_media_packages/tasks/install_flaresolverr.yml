---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if networks exist
  command: docker network inspect {{ item }}
  register: network_check
  failed_when: network_check.rc != 0
  changed_when: false
  loop: 
    - traefik_proxy
    - pangolin_network

- name: Deploy FlareSolverr using Docker Compose
  docker_container:
    name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    hostname: flaresolverr
    env:
      LOG_LEVEL: "info"
      LOG_HTML: "false"
      CAPTCHA_SOLVER: "none"
      TZ: Europe/London
    labels:
      com.docker.compose.project: "media_stack"
      com.docker.compose.service: "flaresolverr"
      traefik.enable: "true"
      traefik.http.routers.flaresolverr-secure.entrypoints: "https"
      traefik.http.routers.flaresolverr-secure.rule: "Host(`{{ flaresolverr_domain }}`)"
      traefik.http.routers.flaresolverr-secure.tls: "true"
      traefik.http.routers.flaresolverr.service: "flaresolverr"
      traefik.http.services.flaresolverr.loadbalancer.server.port: "8191"
      traefik.docker.network: "traefik_proxy"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "flaresolverr"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "8096"
    networks:
      - name: traefik_proxy
      - name: pangolin_network
    restart_policy: unless-stopped
    state: started

- name: FlareSolverr deployed
  debug:
    msg: "FlareSolverr is running successfully"
