#!/bin/sh
set -eu

# Install necessary packages (glibc-based)
apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client python3 python3-matrix-nio coreutils tzdata cron ca-certificates && rm -rf /var/lib/apt/lists/*

# Prepare log file
touch /var/log/cron.log
mkdir -p /etc/cron.d

# Write the backup script
cat >/backup.sh <<'EOF'
#!/usr/bin/env bash
set -Eeuo pipefail

now="$(date +%Y%m%d-%H%M%S)"
mkdir -p /backups
export PGPASSWORD="{{ db_to_backup_password }}"

dest="/backups/{{ db_name }}-${now}.sql.gz"
tmp="$(mktemp "/backups/{{ db_name }}-${now}.XXXXXX.sql.gz")"
trap 'rm -f -- "$tmp"' EXIT

pg_dump -h "{{ container_name }}" -p "5432" -U "{{ db_user }}" -d "{{ db_name }}" \
  -F p --no-owner --no-privileges | gzip -c > "$tmp"

gzip -t "$tmp"

mv -f -- "$tmp" "$dest"
trap - EXIT

find "/backups" -type f -name "{{ db_name }}-*.sql.gz" -mtime +{{ db_backup_retain }} -delete
EOF

chmod +x /backup.sh

# Configure cron job
echo "{{ backup_schedule }} ( /bin/bash /backup.sh 2>&1 ; echo EXIT:\$? ) | python3 /notifier/matrix_notify.py \"{{ notification_message }}\"" > /etc/cron.d/db_backup
crontab /etc/cron.d/db_backup

# Start cron in foreground
cron -f -L 8
