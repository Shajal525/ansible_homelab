---
- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if traefik_proxy network exists
  command: docker network inspect traefik_proxy
  register: network_check
  changed_when: false
  failed_when: network_check.rc != 0

- name: Create directories for RClone
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: "0755"
  loop:
    - "{{ rclone_base_path }}"
    - "{{ rclone_config_path }}"
    - "{{ rclone_sync_script_path }}"
    - "{{ rclone_data_path }}"
    - "{{ my_nas_storage_path }}"
    - "{{ my_cloud_app_storage_path }}"

- name: Create RClone config file from template
  template:
    src: templates/rclone.conf.j2
    dest: "{{ rclone_config_path }}/rclone.conf"

- name: Deploy RClone container
  docker_container:
    name: rclone
    image: rclone/rclone:latest
    env:
      PHP_TZ: "Europe/London"
    security_opts:
      - "no-new-privileges:true"
    volumes:
      - "{{ rclone_config_path }}:/config/rclone"
      - "{{ rclone_sync_script_path }}:/sync_script"
      - "{{ rclone_data_path }}:/data"
      - "{{ my_nas_storage_path }}:/datastorage"
      - "{{ my_cloud_app_storage_path }}:/appstorage"
    devices:
      - /dev/fuse
    command: |
      rcd --rc-web-gui --rc-addr 0.0.0.0:5572
      --rc-web-fetch-url=https://api.github.com/repos/rclone/rclone-webui-react/releases/latest
      --rc-web-gui-update 
      --rc-user {{ rclone_username }}
      --rc-pass {{ rclone_password }} 
      -vv --checksum
      --transfers=4 --checkers=4 --contimeout=60s --timeout=300s --retries=3
      --low-level-retries=10 --stats=1s --stats-file-name-length=0
    labels:
      com.docker.compose.project: "rclone_stack"
      com.docker.compose.service: "rclone"
      traefik.enable: "true"
      traefik.http.routers.rclone-secure.entrypoints: "https"
      traefik.http.routers.rclone-secure.rule: "Host(`{{ rclone_domain }}`)"
      traefik.http.routers.rclone-secure.tls: "true"
      traefik.http.routers.rclone.service: "rclone"
      traefik.http.services.rclone.loadbalancer.server.port: "5572"
      # tsdproxy.enable: "true"
      # tsdproxy.name: "rclone"
      # tsdproxy.scheme: "http"
      # tsdproxy.tlsvalidate: "false"
      # tsdproxy.container_port: "5572"
    networks:
      # - name: media_network
      - name: traefik_proxy
    restart_policy: unless-stopped
    state: started

- name: RClone deployed
  debug:
    msg: "RClone is running successfully"

